package main

type Comment struct {
	Author    string
	CreatedAt string
	Text      string
	Children  []*Comment
}

templ Component(comment *Comment) {
	@scopedcss_Component.Once() {
		<style>.comment.jsx-b142c { padding: 10px }
.header.jsx-b142c { color: gray; font-size: 75% }
.fold.jsx-b142c { text-decoration: none; color: inherit }
.body.jsx-b142c { padding-left: 13px; font-size: 14px }
.body.jsx-b142c a { text-decoration: none; color: inherit }
.body.jsx-b142c a:hover { text-decoration: underline }
</style>
	}
	show := true
	<div class="jsx-b142c comment">
		<div class="jsx-b142c header">
			<a class="jsx-b142c fold" href="#" onclick={ func() { show = !show } }>
				if show {
					↓
				} else {
					→
				}
			</a>
			{ " " }
			{ comment.Author } { timeago(comment.CreatedAt) }
		</div>
		if show {
		}
		<div class="jsx-b142c body" unsafeHTML={ comment.Text }></div>
		for child := range comment.Children {
			@Component(child)
		}
	</div>
}

//Generated by scopedcss
var scopedcss_Component = templ.NewOnceHandle()
